"""Correct nullable column properties

Revision ID: 60d9bf1bc04e
Revises: 084ffe73e89a
Create Date: 2021-05-31 18:04:46.115615

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '60d9bf1bc04e'
down_revision = '084ffe73e89a'
branch_labels = None
depends_on = None


def upgrade():
    # This migration changes 'nullable' for multiple foreign keys, but MySQL / MariaDB
    # forbids changing existing foreign key relations. Disabling those checks here,
    # and enabling them again when finished.
    op.execute('SET FOREIGN_KEY_CHECKS = 0')

    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('account', 'activation_token',
               existing_type=mysql.TEXT(),
               comment='Unique, random token to identify the account during activation. Set to None, after first usage of session token.',
               existing_comment='Unique, random token to identify the account during activation',
               existing_nullable=True)
    op.alter_column('account', 'created_on',
               existing_type=mysql.DATETIME(),
               nullable=False)
    op.alter_column('account', 'pseudonym',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               existing_comment='Pseudonym identifier, for account reference by 3rd parties')
    op.alter_column('building', 'account_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
    op.alter_column('building', 'latitude',
               existing_type=mysql.DECIMAL(precision=15, scale=10),
               nullable=False,
               existing_comment='Coarse-grained latitude, for approximate location indication')
    op.alter_column('building', 'longitude',
               existing_type=mysql.DECIMAL(precision=15, scale=10),
               nullable=False,
               existing_comment='Coarse-grained longitude, for approximate location indication')
    op.alter_column('building', 'tz_name',
               existing_type=mysql.TEXT(),
               nullable=False,
               existing_comment='Time zone name, in the IANA timezone database format')
    op.alter_column('device', 'created_on',
               existing_type=mysql.DATETIME(),
               nullable=False)
    op.alter_column('device', 'device_type_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
    op.alter_column('device', 'proof_of_presence_id',
               existing_type=mysql.TEXT(),
               nullable=False,
               existing_comment='Unique, random token to identify the device during activation')
    op.alter_column('device_type', 'display_name',
               existing_type=mysql.TEXT(),
               nullable=False,
               existing_comment='Name to show in user interfaces')
    op.alter_column('device_type', 'installation_manual_url',
               existing_type=mysql.TEXT(),
               nullable=False,
               existing_comment='URL to manual with installation instructions')
    op.alter_column('device_type', 'name',
               existing_type=mysql.TEXT(),
               nullable=False,
               existing_comment='Short name to uniquely identify the device type')
    op.alter_column('device_type_property', 'device_type_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
    op.alter_column('device_type_property', 'property_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
    op.alter_column('measurement', 'device_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
    op.alter_column('measurement', 'property_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
    op.alter_column('measurement', 'timestamp',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_comment='Time of measurement, as reported by the device')
    op.alter_column('measurement', 'upload_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
    op.alter_column('measurement', 'value',
               existing_type=mysql.TEXT(),
               nullable=False)
    op.alter_column('property', 'name',
               existing_type=mysql.TEXT(),
               nullable=False)
    op.alter_column('upload', 'device_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
    op.alter_column('upload', 'device_time',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_comment='Upload time, as reported by the (sending) device')
    op.alter_column('upload', 'server_time',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_comment='Upload time, as reported by the (receiving) server')
    op.alter_column('upload', 'size',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               existing_comment='Size of upload payload, in bytes')
    # ### end Alembic commands ###

    op.execute('SET FOREIGN_KEY_CHECKS = 1')

def downgrade():
    op.execute('SET FOREIGN_KEY_CHECKS = 0')

    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('upload', 'size',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               existing_comment='Size of upload payload, in bytes')
    op.alter_column('upload', 'server_time',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_comment='Upload time, as reported by the (receiving) server')
    op.alter_column('upload', 'device_time',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_comment='Upload time, as reported by the (sending) device')
    op.alter_column('upload', 'device_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
    op.alter_column('property', 'name',
               existing_type=mysql.TEXT(),
               nullable=True)
    op.alter_column('measurement', 'value',
               existing_type=mysql.TEXT(),
               nullable=True)
    op.alter_column('measurement', 'upload_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
    op.alter_column('measurement', 'timestamp',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_comment='Time of measurement, as reported by the device')
    op.alter_column('measurement', 'property_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
    op.alter_column('measurement', 'device_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
    op.alter_column('device_type_property', 'property_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
    op.alter_column('device_type_property', 'device_type_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
    op.alter_column('device_type', 'name',
               existing_type=mysql.TEXT(),
               nullable=True,
               existing_comment='Short name to uniquely identify the device type')
    op.alter_column('device_type', 'installation_manual_url',
               existing_type=mysql.TEXT(),
               nullable=True,
               existing_comment='URL to manual with installation instructions')
    op.alter_column('device_type', 'display_name',
               existing_type=mysql.TEXT(),
               nullable=True,
               existing_comment='Name to show in user interfaces')
    op.alter_column('device', 'proof_of_presence_id',
               existing_type=mysql.TEXT(),
               nullable=True,
               existing_comment='Unique, random token to identify the device during activation')
    op.alter_column('device', 'device_type_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
    op.alter_column('device', 'created_on',
               existing_type=mysql.DATETIME(),
               nullable=True)
    op.alter_column('building', 'tz_name',
               existing_type=mysql.TEXT(),
               nullable=True,
               existing_comment='Time zone name, in the IANA timezone database format')
    op.alter_column('building', 'longitude',
               existing_type=mysql.DECIMAL(precision=15, scale=10),
               nullable=True,
               existing_comment='Coarse-grained longitude, for approximate location indication')
    op.alter_column('building', 'latitude',
               existing_type=mysql.DECIMAL(precision=15, scale=10),
               nullable=True,
               existing_comment='Coarse-grained latitude, for approximate location indication')
    op.alter_column('building', 'account_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
    op.alter_column('account', 'pseudonym',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               existing_comment='Pseudonym identifier, for account reference by 3rd parties')
    op.alter_column('account', 'created_on',
               existing_type=mysql.DATETIME(),
               nullable=True)
    op.alter_column('account', 'activation_token',
               existing_type=mysql.TEXT(),
               comment='Unique, random token to identify the account during activation',
               existing_comment='Unique, random token to identify the account during activation. Set to None, after first usage of session token.',
               existing_nullable=True)
    # ### end Alembic commands ###

    op.execute('SET FOREIGN_KEY_CHECKS = 1')
